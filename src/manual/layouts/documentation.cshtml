layout: master
bodyclass: nohero-page
highlightCode: true

<aside id="fh5co-hero" style="background-image: url(@(Dynamic.Defined(Model.Document.Image) ? Model.Document.Image : "https://wixtoolset.org/content/red_smoke_3.jpg")">
</aside>

<div id="fh5co-main">
<section class="section">
  <div class="container">
    <div class="row">
      <div class="col-sm-7 col-md-9">
        <div class="row">
          <div class="col-sm-12 tutorial-content">
            <h1>@Model.Document.Title</h1>
            @Raw(Model.Document.Content)
          </div>
        </div>
        <div class="row">
          <div class="col-sm-12">
              @if (Model.Document.Chapter != null && Model.Document.Chapter.SubPages.Count > 0)
              {
                <h3>Pages in this chapter</h3>
                <ul class="nav">
                  @foreach (var page in Model.Document.Chapter.SubPages)
                  {
                    <li class="nav-page"><a href="@page.Document.RelativeUrl"><i class="fa fa-file-o"></i> @page.Document.Title</a></li>
                  }
                </ul>
              }
          </div>

          <div class="row">
            <div class="col-sm-12 col-md-4 text-center">
              @if (Model.Document.PreviousDocument != null)
              {
                <a href="@Model.Document.PreviousDocument.RelativeUrl" class="page-previous" title="Go to previous page">&lsaquo; @Model.Document.PreviousDocument.Title</a>
              }
            </div>
            <div class="col-sm-12 col-md-4 text-center">
              @if (Model.Document.ParentDocument != null)
              {
                <a href="@Model.Document.ParentDocument.RelativeUrl" class="page-up" title="Go to parent page">up</a>
              }
            </div>
            <div class="col-sm-12 col-md-4 text-center">
              @if (Model.Document.NextDocument != null)
              {
                <a href="@Model.Document.NextDocument.RelativeUrl" class="page-next" title="Go to next page">@Model.Document.NextDocument.Title &rsaquo;</a>
              }
            </div>

          </div>
            </div>
          </div>
          <div class="col-sm-5 col-md-3">
            <aside class="sidebar-2">
              <div class="sidebar-widget">
                <form action="/api/search" method="get" type="search">
                  <div class="input-group">
                    <input name="q" type="text" class="form-control" placeholder="Search">
                    <span class="input-group-btn">
                      <button type="submit" class="btn btn-primary"><i class="fa fa-search"></i></button>
                    </span>
                  </div>
                </form>
              </div>
              @foreach (var book in Model.Books)
              {
                <nav class="tutorial-nav">
                  <ul class="nav">
                    @foreach (var chapter in book.Chapters)
                    {
                      @WriteChapter(chapter, true);
                    }
                  </ul>
                </nav>
              }
            </aside>
          </div>
        </div>
      </div>
</section>
@helper WriteChapter(dynamic chapter, bool first = false)
{
  if (chapter.Active || chapter.SubPageActive) {
    var active = @chapter.Active ? "active" : "active-child";
    var caretClass = @first ? "fa-book" : "fa-caret-down";
    var chapterClass = @first ? "nav-book" : "nav-chapter";
    <li class="@chapterClass @active">
      <a href="@chapter.Document.RelativeUrl"><i class="fa @caretClass"></i> @chapter.Document.Title</a><ul class="nav">
        @foreach (var child in chapter.SubPages) {
          if (child.Chapter) {
            @WriteChapter(child);
          } else {
            var childActive = @child.Active ? "active" : null;
            <li class="nav-page @childActive"><a href="@child.Document.RelativeUrl"><i class="fa fa-file-o"></i> @child.Document.Title</a></li>
          }
        }
      </ul>
    </li>
  } else {
    var caretClass = @first ? "fa-book" : "fa-caret-right";
    var chapterClass = @first ? "nav-book" : "nav-chapter";
    <li class="@chapterClass"><a href="@chapter.Document.RelativeUrl"><i class="fa @caretClass"></i> @chapter.Document.Title</a></li>
  }
}